{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","background","height","width","onClick","yelMode","pinkMode","toggleMode","htmlFor","switchText","TextForm","useState","text","setText","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalized","msg","defaultProps","aboutText","App","setMode","setSwitchText","setAlert","message","setTimeout","body","addEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAIe,SAASA,EAAOC,GAC7B,OACE,qBACEC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MADtE,SAGE,sBAAKD,UAAU,kBAAf,UAIE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SACGH,EAAMI,QAET,wBACEH,UAAU,iBACVI,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SAIE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAIF,oBAAIF,UAAU,gBAOhB,qBACEA,UAAU,cACVM,MAAO,CAAEC,WAAY,SAAUC,OAAQ,OAAQC,MAAO,QACtDC,QAASX,EAAMY,QACfN,GAAG,WAEJ,qBACCL,UAAU,gBACVM,MAAO,CAAEC,WAAY,UAAWC,OAAQ,OAAQC,MAAO,QACvDC,QAASX,EAAMa,SACfP,GAAG,YAeL,sBACEL,UAAS,sCACQ,UAAfD,EAAME,KAAmB,OAAS,SAFtC,UAKE,uBACED,UAAU,mBACVU,QAASX,EAAMc,WACfT,KAAK,WACLC,GAAG,2BAEL,uBACEL,UAAU,mBACVc,QAAQ,yBAFV,SAIGf,EAAMgB,wBClFN,SAASC,EAASjB,GAC7B,MAAwBkB,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KA4BA,OACI,qCACI,gCACI,oBAAId,GAAG,UAAUC,MAAO,CAACc,MAAqB,SAAdrB,EAAME,KAAgB,UAAW,SAAjE,SAA4EF,EAAMsB,UAClF,qBAAKrB,UAAU,OAAf,SACA,0BAAUA,UAAU,eAAeM,MAAO,CAACgB,gBAA+B,SAAdvB,EAAME,KAAgB,UAAW,QAASmB,MAAqB,SAAdrB,EAAME,KAAgB,UAAW,SAAUsB,MAAOL,EAAMM,SAV1J,SAACC,GACpBN,EAAQM,EAAMC,OAAOH,QASkLlB,GAAG,QAAQsB,KAAK,QAG/M,wBAAQ3B,UAAU,oBAAoBU,QAnC5B,WAClB,IAAIkB,EAAUV,EAAKW,cACnBV,EAAQS,GACR7B,EAAM+B,UAAU,0CAA2C,YAgCnD,kCACA,wBAAQ9B,UAAU,oBAAoBU,QA/BxB,WACtB,IAAIkB,EAAUV,EAAKa,cACnBZ,EAAQS,GACR7B,EAAM+B,UAAU,0CAA2C,YA4BnD,kCACA,wBAAQ9B,UAAU,oBAAoBU,QA3BpB,WAE1BS,EADc,IAEdpB,EAAM+B,UAAU,0BAA2B,YAwBnC,mBACA,wBAAQ9B,UAAU,oBAAoBU,QAvBhB,WACtB,IAAIQ,EAAOc,SAASC,eAAe,SACnCf,EAAKgB,SACLC,UAAUC,UAAUC,UAAUnB,EAAKK,OACnCxB,EAAM+B,UAAU,sCAAuC,YAmBvD,kCAEJ,sBAAK9B,UAAU,iBAAiBM,MAAO,CAACc,MAAqB,SAAdrB,EAAME,KAAgB,UAAW,SAAhF,UACI,mDACA,oDAAuBiB,EAAKoB,MAAM,KAAKC,OAAvC,cAA0DrB,EAAKqB,OAA/D,iBACA,8BAAI,KAAQrB,EAAKoB,MAAM,KAAKC,OAA5B,sBAEA,yCACA,4BAAIrB,EAAKqB,OAAO,EAAErB,EAAK,6DChDxB,SAASsB,EAAMzC,GAK1B,OACIA,EAAM0C,OAAS,sBAAKzC,UAAS,sBAAiBD,EAAM0C,MAAMrC,KAA7B,gCAAiEsC,KAAK,QAApF,UACZ,iCANa,SAACC,GACjB,IAAMC,EAAQD,EAAKZ,cACnB,OAAOa,EAAMC,OAAO,GAAGhB,cAAce,EAAME,MAAM,GAIrCC,CAAYhD,EAAM0C,MAAMrC,QADrB,KACuCL,EAAM0C,MAAMO,OFwF1ElD,EAAOmD,aAAe,CACpB9C,MAAO,mBACP+C,UAAW,SGlBEC,MArEf,WACE,MAAwBlC,mBAAS,SAAjC,mBAAOhB,EAAP,KAAamD,EAAb,KACA,EAAoCnC,mBAAS,qBAA7C,mBAAOF,EAAP,KAAmBsC,EAAnB,KACA,EAA0BpC,mBAAS,MAAnC,mBAAOwB,EAAP,KAAca,EAAd,KAiBMxB,EAAU,SAACyB,EAASnD,GACxBkD,EAAS,CACPN,IAAKO,EACLnD,KAAMA,IAERoD,YAAW,WACTF,EAAS,QACR,MAoBL,OACE,qCACE,cAACxD,EAAD,CAAQK,MAAQ,YAAaF,KAAQA,EAAMY,WA7C5B,WACJ,UAATZ,GACFmD,EAAQ,QACRC,EAAc,qBACdrB,SAASyB,KAAKnD,MAAMgB,gBAAkB,UACtCQ,EAAU,6BAA8B,WACxCE,SAAS7B,MAAO,yBAGhBiD,EAAQ,SACRC,EAAc,oBACdrB,SAASyB,KAAKnD,MAAMgB,gBAAkB,QACtCQ,EAAU,8BAA+B,WACzCE,SAAS7B,MAAO,0BAgCqDS,SApB1D,WACCoB,SAASC,eAAe,WAC9ByB,iBAAiB,SAAS,WAChC1B,SAASyB,KAAKnD,MAAMgB,gBAAkB,OACtCU,SAASC,eAAe,WAAW3B,MAAMc,MAAQ,OACjDY,SAASC,eAAe,SAAS3B,MAAMc,MAAQ,WAe2CT,QAX/E,WACAqB,SAASC,eAAe,UAC9ByB,iBAAiB,SAAS,WAC/B1B,SAASyB,KAAKnD,MAAMgB,gBAAkB,SACtCU,SAASC,eAAe,WAAW3B,MAAMc,MAAQ,OACjDY,SAASC,eAAe,SAAS3B,MAAMc,MAAQ,aAM6DL,WAAaA,IAEzH,cAACyB,EAAD,CAAOC,MAASA,IAGhB,qBAAKzC,UAAU,iBAAf,SAMM,cAACgB,EAAD,CAAUc,UAAWA,EAAWT,QAAU,mCAAmCpB,KAAQA,UC5DlF0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASC,eAAe,SAM1B0B,K","file":"static/js/main.aa154e4a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>         */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>              */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/About\"> */}\r\n              {/* <a className=\"nav-link\" href=\"/About\">\r\n                {props.aboutText}\r\n              </a> */}\r\n            </li>\r\n          </ul>\r\n          <div\r\n            className=\"yellow mx-2\" \r\n            style={{ background: \"yellow\", height: \"30px\", width: \"30px\" }}\r\n            onClick={props.yelMode}\r\n            id='yelBtn'\r\n          ></div>\r\n           <div\r\n            className=\"pinkMode mx-2\" \r\n            style={{ background: \"#ff00c1\", height: \"30px\", width: \"30px\" }}\r\n            onClick={props.pinkMode}\r\n            id='pinkBtn'\r\n          ></div>\r\n {/*          <button\r\n            type=\"button\"\r\n            onClick={props.pinkMode}\r\n            style={{ background: \"#ff00c1\" }}\r\n            className=\"btn btn-info\"\r\n            id=\"pinkBtn\"\r\n          >\r\n            Enter Pink Mode\r\n          </button> */}\r\n          {/*           <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-warning\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {props.switchText}\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Enter Title Here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('');\r\n    const handleUpClick = ()=>{//this is a function\r\n        let newText = text.toUpperCase();//function for Convert the text to Uppercase\r\n        setText(newText);//this will update the value\r\n        props.showAlert('The text is been converted to Uppercase', 'success')\r\n    }\r\n        const handleLoClick = ()=>{//this is a function\r\n        let newText = text.toLowerCase();//function for Convert the text to Lowercase\r\n        setText(newText);//this will update the value\r\n        props.showAlert('The text is been converted to Lowercase', 'success')\r\n    } \r\n           const handleClrClick = ()=>{//this is a function\r\n        let newText = '';//function for clearing text\r\n        setText(newText);//this will update the value\r\n        props.showAlert('The text is now Cleared', 'success')\r\n    } \r\n              const handleCopyClick = ()=>{//this is a function\r\n                let text = document.getElementById('myBox');\r\n                text.select();\r\n                navigator.clipboard.writeText(text.value)\r\n                props.showAlert('The text is now Copied to Clipboard', 'success')\r\n    }\r\n    \r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);//this is for when we write something inside the box\r\n    }\r\n    // text = 'New Text';//this is the wrong way to change the state\r\n    // setText(\"New Text\");//this is the correct way to change the state\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 id='heading' style={{color: props.mode ==='dark'? '#a7b1d6': 'black'}}>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" style={{backgroundColor: props.mode ==='dark'? '#000629': 'white', color: props.mode ==='dark'? '#a7b1d6': 'black'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                {/* in the above line, we use \"State\" with the use of value */}\r\n                </div>\r\n                <button className=\"btn btn-info mx-1\" onClick={handleUpClick} >Convert To Uppercase</button>\r\n                <button className=\"btn btn-info mx-1\" onClick={handleLoClick} >Convert To Lowercase</button>\r\n                <button className=\"btn btn-info mx-1\" onClick={handleClrClick} >Clear</button>\r\n                <button className=\"btn btn-info mx-1\" onClick={handleCopyClick} >Copy To Clipboard</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode ==='dark'? '#a7b1d6': 'black'}}>\r\n                <h2>Your Text Summary</h2>\r\n                <p>Your Text contains {text.split(' ').length} Words and {text.length} Charecters</p>\r\n                <p>{0.008 * text.split(' ').length} Minutes to Read</p>\r\n                {/* time taken to read one word multiply with number of words */}\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter Something in The textarea to see the preview\"}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalized = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [switchText, setSwitchText] = useState(\"Enable Light Mode\")\n  const [alert, setAlert] = useState(null)//here alert is an object\n  const toggleMode = ()=>{\n    if (mode === 'light') {\n      setMode('dark')\n      setSwitchText('Enable Light Mode')\n      document.body.style.backgroundColor = '#000629';\n      showAlert('Dark Mode has been Enabled', 'success');//calling the show alert function, with type and messages\n      document.title= 'TextUtils - DarkMode'//changing the title dynamically\n    } \n    else {\n      setMode('light')\n      setSwitchText('Enable Dark Mode')\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode has been Enabled', 'success');\n      document.title= 'TextUtils - LightMode'//changing the title dynamicallyn\n    }\n  }\n  const showAlert=(message, type)=>{//show alert is a function which will help us to show alert messages\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n  const pinkMode=()=>{\n    let pinkBtn = document.getElementById('pinkBtn')\n    pinkBtn.addEventListener('click', function(){\n      document.body.style.backgroundColor = 'pink';\n      document.getElementById(\"heading\").style.color = \"blue\";\n      document.getElementById(\"myBox\").style.color = \"pink\";\n\n    })\n  } \n   const yelMode=()=>{\n    let yelBtn = document.getElementById('yelBtn')\n    yelBtn.addEventListener('click', function(){\n      document.body.style.backgroundColor = 'yellow';\n      document.getElementById(\"heading\").style.color = \"grey\";\n      document.getElementById(\"myBox\").style.color = \"yellow\";\n\n    })\n  }\n  return (\n    <>\n      <Navbar title = \"TextUtils\"  mode = {mode} toggleMode = {toggleMode} pinkMode={pinkMode}  yelMode={yelMode} switchText ={switchText}/>\n      {/* <Router> */}\n      <Alert alert = {alert}/>\n      {/* this alert inside the curly braces is a STATE, which we defined above */}\n      {/* in the above line:- when someone click on the switch located in nav bar, [onclick return toggle mode], here we define that toggle mode is equals to js function toggleMode, so we need to add a funcion */}\n      <div className=\"container my-3\">\n      {/* <Switch> */}\n       {/*      <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading = \"Enter some Text to Analyze Below\" mode = {mode}/>\n            {/* </Route> */}\n      {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}